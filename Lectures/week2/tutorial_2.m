% computing on dataA = [1 2; 3 4; 5 6]; B = [11 12; 13 14; 15 16];C=[ones(1,2);2*ones(1,2)]D = A*C% element wise multiplication of matrixesA.*B % element wise squaring of AA.^2v = [1; 2; 3]1 ./ vlog(v) % element wise logv + ones(length(v),1) % same as v+1% transpose A'% for vectorsa = [1 15 2 0.5]val = max(a)[val, ind] = max(a)a < 3 % element wise comparisonfind(a<3) % for matrixesmax(A)A = magic(3)[r, c] = find (A >= 7)sum(a)prod(a) % multiplies all the valuesfloor(a) % rounds downceil(a) % rounds uprand(3) % random numberA = magic(9)sum(A,1) % sums each column of Asum(A,2) % sums each row of AA.*eye(9) % take only the diagonal entriessum(sum(A.*eye(9)))A = magic(3)temp = pinv(A)